---
version: 2

references:
  images:
    go: &GOLANG_IMAGE docker.mirror.hashicorp.services/circleci/golang:1.14.3

  paths:
    test-results: &TEST_RESULTS_DIR /tmp/test-results

  environment: &ENVIRONMENT
    TEST_RESULTS_DIR: *TEST_RESULTS_DIR
    GOTESTSUM_RELEASE: 0.4.2
    EMAIL: noreply@hashicorp.com
    GIT_AUTHOR_NAME: circleci-waypoint
    GIT_COMMITTER_NAME: circleci-waypoint
    BASH_ENV: .circleci/bash_env.sh
    DOCKER_BUILDKIT: 1

jobs:
  # Runs Go linters
  lint:
    docker:
      - image: *GOLANG_IMAGE
    environment:
      GOTAGS: ""
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a0:c8:65:ee:ab:2b:1e:cd:cc:b4:64:79:97:38:49:fd"
      - checkout
      - run:
          name: Install golangci-lint
          command: |
            download=https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
            wget -O- -q $download | sh -x -s -- -d -b /go/bin/ v1.27.0
      - run: go mod download
      - run:
          name: lint
          command: &lintcmd |
            golangci-lint run --build-tags="$GOTAGS" -v --concurrency 2 \
              --disable-all \
              --timeout 10m \
              --enable gosimple \
              --enable govet

  # checks vendor directory is correct
  check-vendor:
    docker:
      - image: *GOLANG_IMAGE
    environment:
      <<: *ENVIRONMENT
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a0:c8:65:ee:ab:2b:1e:cd:cc:b4:64:79:97:38:49:fd"
      - checkout
      - run:
          command: go mod tidy
      - run: |
          if ! git diff --exit-code; then
            echo "Git directory has vendor changes"
            exit 1
          fi

  go-test:
    docker:
      - image: *GOLANG_IMAGE
      - image: docker.mirror.hashicorp.services/localstack/localstack:latest
      - image: docker.mirror.hashicorp.services/letsencrypt/pebble
        command: ["pebble"]
        environment:
          PEBBLE_VA_NOSLEEP: 1
          PEBBLE_VA_ALWAYS_VALID: 1
      - image: docker.mirror.hashicorp.services/circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: waypoint_test
      - image: docker.mirror.hashicorp.services/vault
        command: ["server", "-dev", "-dev-root-token-id=hznroot"]

    parallelism: 4
    environment:
      <<: *ENVIRONMENT
      GOTAGS: ""
      # GOMAXPROCS defaults to number of cores on underlying hardware, set
      # explicitly to avoid OOM issues https://support.circleci.com/hc/en-us/articles/360034684273-common-GoLang-memory-issues
      GOMAXPROCS: 4
      # The medium resource class (default) boxes are 2 vCPUs, 4GB RAM
      # https://circleci.com/docs/2.0/configuration-reference/#docker-executor
      # but we can run a little over that limit.
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a0:c8:65:ee:ab:2b:1e:cd:cc:b4:64:79:97:38:49:fd"
      - checkout
      - attach_workspace:
          at: /go/bin
      - setup_remote_docker:
          docker_layer_cache: true
      - run: &install_gotestsum
          name: Install gotestsum
          command: |
            url=https://github.com/gotestyourself/gotestsum/releases/download
            curl -sSL "${url}/v${GOTESTSUM_RELEASE}/gotestsum_${GOTESTSUM_RELEASE}_linux_amd64.tar.gz" | \
              sudo tar -xz --overwrite -C /usr/local/bin gotestsum
      - run: go mod download
      - run:
          name: go test
          command: |
            mkdir -p $TEST_RESULTS_DIR
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            echo "Running $(echo $PACKAGE_NAMES | wc -w) packages"
            echo $PACKAGE_NAMES
            gotestsum --format=short-verbose \
              --junitfile $TEST_RESULTS_DIR/gotestsum-report.xml -- \
              -tags="$GOTAGS" -p 2 \
              -cover -coverprofile=coverage.txt \
              $PACKAGE_NAMES

      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR

  # create a development build
  dev-build:
    docker:
      - image: *GOLANG_IMAGE
    environment:
      <<: *ENVIRONMENT
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a0:c8:65:ee:ab:2b:1e:cd:cc:b4:64:79:97:38:49:fd"
      - checkout
      - attach_workspace:
          at: .
      - run:
          command: |
            go build -o /go/bin/waypoint-hzn ./cmd/waypoint-hzn

      # save dev build to pass to downstream jobs
      - persist_to_workspace:
          root: /go/bin
          paths:
            - waypoint-hzn

  image-release:
    docker:
      # Use a modern Circle image as we just need up-to-date Docker here
      - image: docker.mirror.hashicorp.services/cimg/base:2020.07-20.04
    environment:
      <<: *ENVIRONMENT
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a0:c8:65:ee:ab:2b:1e:cd:cc:b4:64:79:97:38:49:fd"
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          # We require > 17.06 to support --mount being
          # passed to RUN
          version: 19.03.8
      - attach_workspace:
          at: .
      - run:
          name: "Docker: Login to GitHub Package Registry"
          command: |
            echo "$GH_DOCKER_PASS" | docker login docker.pkg.github.com --username $GH_DOCKER_USER --password-stdin
      - run:
          name: "Docker: Build image"
          command: |
            # Note that the "id_rsa_FOO" key name is based on the fingerprint of the SSH key
            # added in add_ssh_keys, but with colons removed.
            docker build \
              --ssh default \
              --secret id=ssh.config,src="${HOME}/project/.circleci/ssh_config" \
              --secret id=ssh.key,src="${HOME}/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98" \
              --progress=plain \
              -t docker.pkg.github.com/hashicorp/waypoint-hzn/waypoint-hzn-alpha:latest \
              .
      - run:
          name: "Docker: Push image"
          command: |
            docker push docker.pkg.github.com/hashicorp/waypoint-hzn/waypoint-hzn-alpha:latest

workflows:
  version: 2
  go-tests:
    jobs:
      - check-vendor
      - lint
      - dev-build
      - go-test

  integration:
    jobs:
      - dev-build
      - image-release:
          requires:
            - dev-build
          filters:
            branches:
              only:
                - main
