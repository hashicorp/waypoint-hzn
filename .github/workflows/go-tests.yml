name: hashicorp/waypoint-hzn/go-tests
on:
  push:
    branches:
    - main
env:
  GH_DOCKER_USER: xxxxxxx
jobs:
  check-vendor:
    runs-on: ubuntu-latest
    container:
      image: docker.mirror.hashicorp.services/circleci/golang:1.14.3
    env:
      TEST_RESULTS_DIR: "/tmp/test-results"
      GOTESTSUM_RELEASE: 0.4.2
      EMAIL: noreply@hashicorp.com
      GIT_AUTHOR_NAME: circleci-waypoint
      GIT_COMMITTER_NAME: circleci-waypoint
      BASH_ENV: ".circleci/bash_env.sh"
      DOCKER_BUILDKIT: 1
    steps:
    # Ensure parameter if_key_exists is set correctly
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2.5.0
      with:
        key: "${{ secrets.CIRCLE_CI_SSH_KEY }}"
        name: circle_ci_id_rsa
        known_hosts: "${{ secrets.CIRCLE_CI_KNOWN_HOSTS }}"
        if_key_exists: fail
    - uses: actions/checkout@v3.5.0
    - run: go mod tidy
    - run: |
        if ! git diff --exit-code; then
          echo "Git directory has vendor changes"
          exit 1
        fi
  lint:
    runs-on: ubuntu-latest
    container:
      image: docker.mirror.hashicorp.services/circleci/golang:1.14.3
    env:
      GOTAGS: ''
    steps:
    # Ensure parameter if_key_exists is set correctly
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2.5.0
      with:
        key: "${{ secrets.CIRCLE_CI_SSH_KEY }}"
        name: circle_ci_id_rsa
        known_hosts: "${{ secrets.CIRCLE_CI_KNOWN_HOSTS }}"
        if_key_exists: fail
    - uses: actions/checkout@v3.5.0
    - name: Install golangci-lint
      run: |-
        download=https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
        wget -O- -q $download | sh -x -s -- -d -b /go/bin/ v1.27.0
    - run: go mod download
    - name: lint
      run: |-
        golangci-lint run --build-tags="$GOTAGS" -v --concurrency 2 \
          --disable-all \
          --timeout 10m \
          --enable gosimple \
          --enable govet
  dev-build:
    runs-on: ubuntu-latest
    container:
      image: docker.mirror.hashicorp.services/circleci/golang:1.14.3
    env:
      TEST_RESULTS_DIR: "/tmp/test-results"
      GOTESTSUM_RELEASE: 0.4.2
      EMAIL: noreply@hashicorp.com
      GIT_AUTHOR_NAME: circleci-waypoint
      GIT_COMMITTER_NAME: circleci-waypoint
      BASH_ENV: ".circleci/bash_env.sh"
      DOCKER_BUILDKIT: 1
    steps:
    # Ensure parameter if_key_exists is set correctly
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2.5.0
      with:
        key: "${{ secrets.CIRCLE_CI_SSH_KEY }}"
        name: circle_ci_id_rsa
        known_hosts: "${{ secrets.CIRCLE_CI_KNOWN_HOSTS }}"
        if_key_exists: fail
    - uses: actions/checkout@v3.5.0
    - uses: actions/download-artifact@v3.0.1
      with:
        path: "."
    - run: go build -o /go/bin/waypoint-hzn ./cmd/waypoint-hzn
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/go/bin/waypoint-hzn"
  go-test:
    runs-on: ubuntu-latest
    container:
      image: docker.mirror.hashicorp.services/circleci/golang:1.14.3
    services:
      localstack:
        image: docker.mirror.hashicorp.services/localstack/localstack:latest
      pebble:
        image: docker.mirror.hashicorp.services/letsencrypt/pebble
        env:
          PEBBLE_VA_NOSLEEP: 1
          PEBBLE_VA_ALWAYS_VALID: 1
        options: "   pebble"
      postgres:
        image: docker.mirror.hashicorp.services/circleci/postgres:11-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: waypoint_test
      vault:
        image: docker.mirror.hashicorp.services/vault
        options: "   server -dev -dev-root-token-id=hznroot"
    env:
      TEST_RESULTS_DIR: "/tmp/test-results"
      GOTESTSUM_RELEASE: 0.4.2
      EMAIL: noreply@hashicorp.com
      GIT_AUTHOR_NAME: circleci-waypoint
      GIT_COMMITTER_NAME: circleci-waypoint
      BASH_ENV: ".circleci/bash_env.sh"
      DOCKER_BUILDKIT: 1
      GOTAGS: ''
      GOMAXPROCS: 4
    steps:
    # Ensure parameter if_key_exists is set correctly
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2.5.0
      with:
        key: "${{ secrets.CIRCLE_CI_SSH_KEY }}"
        name: circle_ci_id_rsa
        known_hosts: "${{ secrets.CIRCLE_CI_KNOWN_HOSTS }}"
        if_key_exists: fail
    - uses: actions/checkout@v3.5.0
    - uses: actions/download-artifact@v3.0.1
      with:
        path: "/go/bin"
#     # 'setup_remote_docker' was not transformed because there is no suitable equivalent in GitHub Actions
    - name: Install gotestsum
      run: |-
        url=https://github.com/gotestyourself/gotestsum/releases/download
        curl -sSL "${url}/v${GOTESTSUM_RELEASE}/gotestsum_${GOTESTSUM_RELEASE}_linux_amd64.tar.gz" | \
          sudo tar -xz --overwrite -C /usr/local/bin gotestsum
    - run: go mod download
    - name: go test
      run: |-
        mkdir -p $TEST_RESULTS_DIR
        PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
        echo "Running $(echo $PACKAGE_NAMES | wc -w) packages"
        echo $PACKAGE_NAMES
        gotestsum --format=short-verbose \
          --junitfile $TEST_RESULTS_DIR/gotestsum-report.xml -- \
          -tags="$GOTAGS" -p 2 \
          -cover -coverprofile=coverage.txt \
          $PACKAGE_NAMES
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/tmp/test-results"
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/tmp/test-results"
